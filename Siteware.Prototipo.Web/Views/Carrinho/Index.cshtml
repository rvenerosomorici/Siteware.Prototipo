@model Siteware.Prototipo.Web.ViewModels.Carrinho.CarrinhoValidationViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Carrinho de Compras</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Produtos", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.DropDownList("ddProdutos", (SelectList)ViewBag.ddProdutos, new { @class = "form-control" })
            </div>
            <div class="col-md-2">
                <input type="button" id="btnSelecionarProduto" value="Selecionar" class="btn btn-default" />
            </div>
            @Html.ValidationMessage("ddProdutos", "O Produto precisa ser selecionado!", new { @class = "mensagemErro text-danger invisivel" })
        </div>


        <div class="form-group invisivel formulario">
            <hr />
            @Html.HiddenFor(model => model.IdProduto)
            <div class="col-md-3">
                @Html.LabelFor(model => model.NomeProduto, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.NomeProduto, new { htmlAttributes = new { @class = "form-control desabilitado" } })
                @Html.ValidationMessageFor(model => model.NomeProduto, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ValorUnitario, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ValorUnitario, new { htmlAttributes = new { @class = "form-control desabilitado" } })
                @Html.ValidationMessageFor(model => model.ValorUnitario, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.QuantidadeCompra, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.QuantidadeCompra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantidadeCompra, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.Label("Confirmar Compra?", htmlAttributes: new { @class = "control-label" })
                <input type="submit" id="simSubmit" value="Sim" class="btn btn-default" />
                <input type="button" id="naoSubmit" value="Não" class="btn btn-default" />
            </div>
        </div>
        @if (ViewBag.lstCarrinhoShowViewModel != null)
        {
            
            <div class="form-group">
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayName("Produto")
                        </th>
                        <th class="hidden-xs">
                            @Html.DisplayName("Valor Unitário")
                        </th>
                        <th>
                            @Html.DisplayName("Promoção")
                        </th>
                        <th class="hidden-xs">
                            @Html.DisplayName("Quantidade de Compra")
                        </th>
                        <th>
                            @Html.DisplayName("Quantidade Final")
                        </th>
                        <th>
                            @Html.DisplayName("Valor Final")
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var item in ViewBag.lstCarrinhoShowViewModel)
                    {
                        <tr>
                            <td>
                                @item.NomeProduto
                            </td>
                            <td class="hidden-xs">
                                R$ @item.ValorUnitario
                            </td>
                            <td>
                                @item.Promocao
                            </td>
                            <td class="hidden-xs">
                                @item.QuantidadeCompra
                            </td>
                            <td>
                                @item.QuantidadeFinal
                            </td>
                            <td>
                                R$ @item.ValorCompra
                            </td>
                            <td>
                                @Html.ActionLink("Excluir", "Delete", new { id = @item.IdProduto })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        }
    </div>
}

<script src="~/Scripts/jquery-2.2.3.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jQueryFixes.js"></script>
<script src="~/Scripts/ConsultaProduto.js"></script>
